#!/bin/bash

main() {
    if [ "$IS_WORKER" = "true" ]; then
        exec "$@"
    else
        prepare_file_permissions
        install_php_dependencies
        run_npm_build
        prepare_storage
        check_laravel_log_file
        generate_app_key
        run_migrations
        run_server "$@"
    fi
}

prepare_file_permissions() {
    chmod a+x ./artisan
}

install_php_dependencies() {
    if [ ! -d "vendor" ]; then
        echo "Vendor directory not found. Running Composer Install..."
        composer install --ignore-platform-req=php --no-dev --optimize-autoloader
        composer clear-cache
        php artisan package:discover --ansi
        chmod -R 775 storage
        chown -R www-data:www-data storage
    else
        echo "Vendor directory found. Skipping Composer Install."
    fi
}

run_npm_build() {
    echo "Installing NPM dependencies"
    if [ -f "package.json" ]; then
        echo "Running NPM clean install"
        npm install

        echo "Running NPM build"
        npm run build
    else
        echo "No package.json found, skipping NPM build"
    fi
}

prepare_storage() {
    # Create required directories for Laravel
    mkdir -p /usr/share/nginx/html/storage/framework/cache/data
    mkdir -p /usr/share/nginx/html/storage/framework/sessions
    mkdir -p /usr/share/nginx/html/storage/framework/views

    # Set permissions for the storage directory
    chown -R www-data:www-data /usr/share/nginx/html/storage
    chmod -R 775 /usr/share/nginx/html/storage

    # Ensure the symlink exists
    php artisan storage:link
}

run_migrations() {
    ./artisan migrate
}

run_server() {
    exec /usr/local/bin/docker-php-entrypoint "$@"
}

generate_app_key() {
    if ! grep -q "^APP_KEY=" .env; then
        echo "APP_KEY not found in .env. Generating key..."
        php artisan key:generate
    else
        echo "APP_KEY already set. Skipping key generation."
    fi
}

check_laravel_log_file() {
    LOG_DIR="storage/logs"
    LOG_FILE="$LOG_DIR/laravel.log"

    if [ ! -d "$LOG_DIR" ]; then
        echo "üìÅ Diret√≥rio $LOG_DIR n√£o encontrado. Criando..."
        mkdir -p "$LOG_DIR"
        chown -R www-data:www-data "$LOG_DIR"
        chmod -R 775 "$LOG_DIR"
    fi

    if [ ! -f "$LOG_FILE" ]; then
        echo "üìù Arquivo $LOG_FILE n√£o existe. Criando..."
        touch "$LOG_FILE"
    fi

    if [ ! -r "$LOG_FILE" ] || [ ! -w "$LOG_FILE" ]; then
        echo "üîß Corrigindo permiss√µes de $LOG_FILE..."
        chmod 664 "$LOG_FILE"
        chown www-data:www-data "$LOG_FILE"
    else
        echo "‚úÖ $LOG_FILE pronto e com permiss√µes adequadas."
    fi
}


main "$@"
